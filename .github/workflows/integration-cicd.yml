name: Integration CI
on:
  pull_request:
    branches: [integration]
  push:
    branches: [integration]
  workflow_dispatch:

permissions:
  contents: write

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/devops-essentials
  CLOUD_RUN_SERVICE_INT: devops-essentials-int
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: europe-west1

jobs:
  verify:
    uses: ./.github/workflows/verify.yml
    secrets: inherit
    with:
      node-version: '20'

  release_build_push_integration:
    if: github.event_name == 'push'
    name: Release-it (minor) + Build & Push (integration)
    needs: verify
    runs-on: ubuntu-latest

    # Expose version + digest to the deploy job
    outputs:
      version: ${{ steps.version.outputs.version }}
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # release-it needs tags/history

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Configure git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Bumps package.json minor, commits, tags vX.Y.Z, pushes back to integration
      - name: Run release-it (minor)
        run: npx release-it minor --ci

      # Read version AFTER release-it (ESM-safe)
      - name: Read version after release-it
        id: version
        run: echo "version=$(node -p \"require('./package.json').version\")" >> "$GITHUB_OUTPUT"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (v${{ steps.version.outputs.version }})
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: docker.io/${{ env.IMAGE_NAME }}:v${{ steps.version.outputs.version }}

  deploy_integration:
    if: github.event_name == 'push'
    name: Deploy to Cloud Run (INT)
    needs: release_build_push_integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Ensure version/digest present
        shell: bash
        run: |
          echo "Version from build job: '${{ needs.release_build_push_integration.outputs.version }}'"
          echo "Digest from build job:  '${{ needs.release_build_push_integration.outputs.digest }}'"
          if [ -z "${{ needs.release_build_push_integration.outputs.version }}" ] || [ -z "${{ needs.release_build_push_integration.outputs.digest }}" ]; then
            echo "::error::Missing version or digest from previous job."; exit 1
          fi

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Optional: preflight pull for visibility
      - name: Echo & Pull image
        run: |
          echo "docker.io/${{ env.IMAGE_NAME }}@${{ needs.release_build_push_integration.outputs.digest }}"
          docker pull docker.io/${{ env.IMAGE_NAME }}@${{ needs.release_build_push_integration.outputs.digest }}

      - name: Deploy (INT service)
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.CLOUD_RUN_SERVICE_INT }}
          project_id: ${{ env.GCP_PROJECT_ID }}
          region: ${{ env.GCP_REGION }}
          image: docker.io/${{ env.IMAGE_NAME }}@${{ needs.release_build_push_integration.outputs.digest }}
          flags: --allow-unauthenticated

      - name: Print INT URL
        run: echo "INT URL => ${{ steps.deploy.outputs.url }}"
